package zzztwita;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class twitter extends javax.swing.JInternalFrame {
 String pathSeleccionada="";
   private RandomAccessFile file_Users;
    public twitter() {
        initComponents();
        
        //Asignacion para que no se muestre el panel de registro al ejecutar
        registro.setVisible(false);
        
        //Asignacion para que no se muestre el panel donde se muestran los twits
        pantallaInicio.setVisible(false);
        
        //Asignacion para que no se muestre el panel donde se muestran los twits
        timeline.setVisible(false);
        
        //Asignacion para que no se muestre el panel de editar perfil
        editPerfil.setVisible(false);
        
        //Asignacion para que no se muestre el panel de editar perfil
        perfilUser.setVisible(false);
        
        //Asignacion para que no se muestre el panel donde se muestran los twits
        showTwits.setVisible(false);
        
        //Asignacion para que no se muestre el panel donde se muestran los twits
        hashtag.setVisible(false);
        
        //Asignacion del tamaño del Panel donde se hace el inicio de sesion
        //Asignacion para que no se muestre el panel de inicio de sesion al ejecutar
        principalLogin.setVisible(true);

        //Asigancion para que no se muestre el panel de titulo ne el twitter.
        jPanel1.setVisible(false);

//        try {
//            File archivo = new File("RedRetro/usuarios.twc");
//            archivo.createNewFile(); // Crea el archivo si no existe
//    
//        } catch (IOException e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error en archivo Usuarios", JOptionPane.ERROR_MESSAGE);
//        }


        try {
            file_Users = new RandomAccessFile("BDTWITEH/usuarios.twc", "rw");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error en archivo Usuarios", JOptionPane.ERROR_MESSAGE);
        }
       
    }
    
    int edad,contadorGenero;
    String genero="",usuarioLoggeado;
    
    Image image = new ImageIcon("src/images/userDefault0.png").getImage();
    
    /**
     * This method is called from within the constructor to initialize the form
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        principalLogin = new javax.swing.JPanel();
        Titulo_InicioSesionLabel = new javax.swing.JLabel();
        userSesionLabel1 = new javax.swing.JLabel();
        contraSesionLabel2 = new javax.swing.JLabel();
        userTextField1 = new javax.swing.JTextField();
        contraTextField1 = new javax.swing.JTextField();
        botonIngresar = new javax.swing.JButton();
        textoParaRegistrarLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        registro = new javax.swing.JPanel();
        imagenTwitter = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        Titulo_CrearUsuarioLabel = new javax.swing.JLabel();
        userTextField = new javax.swing.JTextField();
        fotoPerfilLabel = new javax.swing.JLabel();
        contraLabel1 = new javax.swing.JLabel();
        RegistrarseBoton = new javax.swing.JButton();
        userLabel1 = new javax.swing.JLabel();
        nombreUsuarioText = new javax.swing.JTextField();
        userLabel2 = new javax.swing.JLabel();
        contraTextField = new javax.swing.JTextField();
        userLabel3 = new javax.swing.JLabel();
        edadTextField = new javax.swing.JTextField();
        seleccionarImagenBoton = new javax.swing.JButton();
        profilePicture = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        baaack = new javax.swing.JButton();
        timeline = new javax.swing.JPanel();
        twit = new javax.swing.JTextField();
        botonEnviar = new javax.swing.JButton();
        showTwits = new javax.swing.JScrollPane();
        contenido = new javax.swing.JPanel();
        perfilUser = new javax.swing.JPanel();
        fotoVerPerfil = new javax.swing.JLabel();
        userVerPerfil = new javax.swing.JLabel();
        labelSeguidos = new javax.swing.JLabel();
        userVerPerfil3 = new javax.swing.JLabel();
        userVerPerfil4 = new javax.swing.JLabel();
        labelSeguidores = new javax.swing.JLabel();
        volverBoton = new javax.swing.JButton();
        unfollowBoton = new javax.swing.JButton();
        followBoton = new javax.swing.JButton();
        verTwitsEditar = new javax.swing.JButton();
        seguidoONo = new javax.swing.JLabel();
        twitsVerPerfil = new javax.swing.JScrollPane();
        contenidoVerPerfil = new javax.swing.JPanel();
        nombreVerPerfil1 = new javax.swing.JLabel();
        editPerfil = new javax.swing.JPanel();
        buscarTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        desactivarBoton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        contenidoPanel = new javax.swing.JPanel();
        searchBoton = new javax.swing.JButton();
        volverEditPerfil = new javax.swing.JButton();
        interacciones = new javax.swing.JPanel();
        interaccionesText = new javax.swing.JScrollPane();
        contentInteracciones = new javax.swing.JPanel();
        userInteraccion = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hashtag = new javax.swing.JPanel();
        hashTextField = new javax.swing.JTextField();
        buscarHash = new javax.swing.JButton();
        hashText = new javax.swing.JScrollPane();
        content = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pantallaInicio = new javax.swing.JPanel();
        FPinicio = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        canttwits = new javax.swing.JLabel();
        cantSeguidores = new javax.swing.JLabel();
        nombreUser = new javax.swing.JLabel();
        logOut = new javax.swing.JButton();
        botonHashTag = new javax.swing.JButton();
        botonTimeLine = new javax.swing.JButton();
        botonInteracciones = new javax.swing.JButton();
        editPerfilBoton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cantSeguidos = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setBorder(new javax.swing.border.MatteBorder(null));
        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setMaximumSize(new java.awt.Dimension(1200, 700));
        setMinimumSize(new java.awt.Dimension(1200, 700));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        principalLogin.setBackground(new java.awt.Color(0, 153, 204));
        principalLogin.setMaximumSize(new java.awt.Dimension(1200, 680));
        principalLogin.setMinimumSize(new java.awt.Dimension(1200, 680));
        principalLogin.setPreferredSize(new java.awt.Dimension(1200, 680));
        principalLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo_InicioSesionLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 80)); // NOI18N
        Titulo_InicioSesionLabel.setForeground(new java.awt.Color(0, 0, 0));
        Titulo_InicioSesionLabel.setText("Iniciar Sesion");
        principalLogin.add(Titulo_InicioSesionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 490, 100));

        userSesionLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 44)); // NOI18N
        userSesionLabel1.setForeground(new java.awt.Color(0, 0, 0));
        userSesionLabel1.setText("Usuario");
        principalLogin.add(userSesionLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 160, 100));

        contraSesionLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 44)); // NOI18N
        contraSesionLabel2.setForeground(new java.awt.Color(0, 0, 0));
        contraSesionLabel2.setText("Contraseña");
        principalLogin.add(contraSesionLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 230, 100));

        userTextField1.setBackground(new java.awt.Color(255, 255, 255));
        userTextField1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        userTextField1.setForeground(new java.awt.Color(51, 153, 255));
        userTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userTextField1FocusLost(evt);
            }
        });
        principalLogin.add(userTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, 540, 50));

        contraTextField1.setBackground(new java.awt.Color(255, 255, 255));
        contraTextField1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        contraTextField1.setForeground(new java.awt.Color(51, 153, 255));
        principalLogin.add(contraTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, 540, 50));

        botonIngresar.setBackground(new java.awt.Color(255, 255, 255));
        botonIngresar.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        botonIngresar.setForeground(new java.awt.Color(0, 0, 0));
        botonIngresar.setText("Ingresar");
        botonIngresar.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        botonIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIngresarActionPerformed(evt);
            }
        });
        principalLogin.add(botonIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 270, 260, 70));

        textoParaRegistrarLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        textoParaRegistrarLabel.setForeground(new java.awt.Color(255, 255, 255));
        textoParaRegistrarLabel.setText("¿No tienes una cuenta aun?");
        principalLogin.add(textoParaRegistrarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 300, 60));

        jButton1.setBackground(new java.awt.Color(0, 153, 204));
        jButton1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Registrate");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        principalLogin.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 420, 160, 60));

        getContentPane().add(principalLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 680));

        registro.setBackground(new java.awt.Color(0, 153, 204));
        registro.setPreferredSize(new java.awt.Dimension(1200, 680));
        registro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imagenTwitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoTwitter0.png"))); // NOI18N
        registro.add(imagenTwitter, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 0, 300, 260));

        userLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        userLabel.setForeground(new java.awt.Color(0, 0, 0));
        userLabel.setText("Usuario");
        registro.add(userLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 90, 50));

        Titulo_CrearUsuarioLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 60)); // NOI18N
        Titulo_CrearUsuarioLabel.setForeground(new java.awt.Color(255, 255, 255));
        Titulo_CrearUsuarioLabel.setText("Crear Usuario");
        registro.add(Titulo_CrearUsuarioLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 390, 80));

        userTextField.setBackground(new java.awt.Color(255, 255, 255));
        userTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        userTextField.setForeground(new java.awt.Color(51, 153, 255));
        userTextField.setBorder(new javax.swing.border.MatteBorder(null));
        registro.add(userTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, 420, -1));

        fotoPerfilLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        fotoPerfilLabel.setForeground(new java.awt.Color(0, 0, 0));
        fotoPerfilLabel.setText("Foto de Perfil");
        registro.add(fotoPerfilLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, 230, 60));

        contraLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        contraLabel1.setForeground(new java.awt.Color(0, 0, 0));
        contraLabel1.setText("Genero");
        registro.add(contraLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 90, 80));

        RegistrarseBoton.setBackground(new java.awt.Color(0, 153, 255));
        RegistrarseBoton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 30)); // NOI18N
        RegistrarseBoton.setForeground(new java.awt.Color(255, 255, 255));
        RegistrarseBoton.setText("Registrarse");
        RegistrarseBoton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        RegistrarseBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarseBotonActionPerformed(evt);
            }
        });
        registro.add(RegistrarseBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 110, 200, 60));

        userLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        userLabel1.setForeground(new java.awt.Color(0, 0, 0));
        userLabel1.setText("Nombre Usuario");
        registro.add(userLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 200, 50));

        nombreUsuarioText.setBackground(new java.awt.Color(255, 255, 255));
        nombreUsuarioText.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        nombreUsuarioText.setForeground(new java.awt.Color(51, 153, 255));
        nombreUsuarioText.setBorder(new javax.swing.border.MatteBorder(null));
        nombreUsuarioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreUsuarioTextActionPerformed(evt);
            }
        });
        registro.add(nombreUsuarioText, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 420, -1));

        userLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        userLabel2.setForeground(new java.awt.Color(0, 0, 0));
        userLabel2.setText("Contraseña");
        registro.add(userLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 130, 50));

        contraTextField.setBackground(new java.awt.Color(255, 255, 255));
        contraTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        contraTextField.setForeground(new java.awt.Color(51, 153, 255));
        contraTextField.setBorder(new javax.swing.border.MatteBorder(null));
        registro.add(contraTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 420, -1));

        userLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        userLabel3.setForeground(new java.awt.Color(0, 0, 0));
        userLabel3.setText("Edad");
        registro.add(userLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 60, 50));

        edadTextField.setBackground(new java.awt.Color(255, 255, 255));
        edadTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        edadTextField.setForeground(new java.awt.Color(51, 153, 255));
        edadTextField.setBorder(new javax.swing.border.MatteBorder(null));
        edadTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edadTextFieldActionPerformed(evt);
            }
        });
        registro.add(edadTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 90, -1));

        seleccionarImagenBoton.setBackground(new java.awt.Color(0, 153, 255));
        seleccionarImagenBoton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        seleccionarImagenBoton.setForeground(new java.awt.Color(255, 255, 255));
        seleccionarImagenBoton.setText("Seleccionar Foto");
        seleccionarImagenBoton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        seleccionarImagenBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarImagenBotonActionPerformed(evt);
            }
        });
        registro.add(seleccionarImagenBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, 220, 40));

        profilePicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        registro.add(profilePicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 360, 250, 220));

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Quitar");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        registro.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 490, 220, 40));

        jComboBox1.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "masculino", "femenino" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        registro.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 170, 50));

        baaack.setBackground(new java.awt.Color(204, 0, 0));
        baaack.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        baaack.setForeground(new java.awt.Color(255, 255, 255));
        baaack.setText("Volver ");
        baaack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        baaack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baaackActionPerformed(evt);
            }
        });
        registro.add(baaack, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 180, 200, 60));

        getContentPane().add(registro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 680));

        timeline.setBackground(new java.awt.Color(102, 204, 255));
        timeline.setPreferredSize(new java.awt.Dimension(630, 580));
        timeline.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        twit.setBackground(new java.awt.Color(255, 255, 255));
        twit.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        twit.setForeground(new java.awt.Color(0, 0, 0));
        twit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twitActionPerformed(evt);
            }
        });
        twit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                twitKeyPressed(evt);
            }
        });
        timeline.add(twit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 500, 40));

        botonEnviar.setBackground(new java.awt.Color(51, 204, 255));
        botonEnviar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        botonEnviar.setForeground(new java.awt.Color(204, 255, 255));
        botonEnviar.setText("Send");
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });
        timeline.add(botonEnviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 90, 40));

        showTwits.setBackground(new java.awt.Color(0, 102, 102));

        contenido.setBackground(new java.awt.Color(51, 204, 255));
        showTwits.setViewportView(contenido);

        timeline.add(showTwits, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 610, 500));

        getContentPane().add(timeline, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 630, -1));

        perfilUser.setBackground(new java.awt.Color(102, 204, 255));
        perfilUser.setForeground(new java.awt.Color(255, 255, 255));
        perfilUser.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fotoVerPerfil.setForeground(new java.awt.Color(255, 255, 255));
        fotoVerPerfil.setText("Foto de Perfil");
        perfilUser.add(fotoVerPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 170, 170));

        userVerPerfil.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        userVerPerfil.setForeground(new java.awt.Color(255, 255, 255));
        userVerPerfil.setText("Usuario");
        perfilUser.add(userVerPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 330, 50));

        labelSeguidos.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        labelSeguidos.setForeground(new java.awt.Color(255, 255, 255));
        labelSeguidos.setText("cant");
        perfilUser.add(labelSeguidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, 100, 30));

        userVerPerfil3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        userVerPerfil3.setForeground(new java.awt.Color(255, 255, 255));
        userVerPerfil3.setText("Seguidores");
        perfilUser.add(userVerPerfil3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 130, 50));

        userVerPerfil4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        userVerPerfil4.setForeground(new java.awt.Color(255, 255, 255));
        userVerPerfil4.setText("Seguidos");
        perfilUser.add(userVerPerfil4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 100, 50));

        labelSeguidores.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        labelSeguidores.setForeground(new java.awt.Color(255, 255, 255));
        labelSeguidores.setText("cant");
        perfilUser.add(labelSeguidores, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 80, 30));

        volverBoton.setText("volver");
        volverBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBotonActionPerformed(evt);
            }
        });
        perfilUser.add(volverBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 480, 130, 50));

        unfollowBoton.setText("Unfollow");
        unfollowBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfollowBotonActionPerformed(evt);
            }
        });
        perfilUser.add(unfollowBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, 130, 50));

        followBoton.setText("Follow");
        followBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followBotonActionPerformed(evt);
            }
        });
        perfilUser.add(followBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 130, 50));

        verTwitsEditar.setText("ver twits");
        verTwitsEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verTwitsEditarActionPerformed(evt);
            }
        });
        perfilUser.add(verTwitsEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, 130, 50));

        seguidoONo.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        seguidoONo.setForeground(new java.awt.Color(255, 255, 255));
        seguidoONo.setText("Seguido?");
        perfilUser.add(seguidoONo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, 180, 40));

        twitsVerPerfil.setViewportView(contenidoVerPerfil);

        perfilUser.add(twitsVerPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 760, 300));

        nombreVerPerfil1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        nombreVerPerfil1.setForeground(new java.awt.Color(255, 255, 255));
        nombreVerPerfil1.setText("Nombre de Usuario");
        perfilUser.add(nombreVerPerfil1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 310, 50));

        getContentPane().add(perfilUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 780, 540));

        editPerfil.setBackground(new java.awt.Color(51, 204, 255));
        editPerfil.setPreferredSize(new java.awt.Dimension(630, 580));
        editPerfil.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buscarTextField.setBackground(new java.awt.Color(255, 255, 255));
        buscarTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        buscarTextField.setForeground(new java.awt.Color(0, 0, 0));
        buscarTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarTextFieldKeyReleased(evt);
            }
        });
        editPerfil.add(buscarTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 440, 30));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Buscar: ");
        editPerfil.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 50));

        desactivarBoton.setText("Desactivar Cuenta");
        desactivarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desactivarBotonActionPerformed(evt);
            }
        });
        editPerfil.add(desactivarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 510, 130, 30));

        jScrollPane1.setViewportView(contenidoPanel);

        editPerfil.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 590, 430));

        searchBoton.setText("Buscar");
        searchBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBotonActionPerformed(evt);
            }
        });
        editPerfil.add(searchBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 90, 30));

        volverEditPerfil.setText("volver");
        volverEditPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverEditPerfilActionPerformed(evt);
            }
        });
        editPerfil.add(volverEditPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 130, 30));

        getContentPane().add(editPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, -1, -1));

        interacciones.setBackground(new java.awt.Color(51, 204, 255));
        interacciones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        interaccionesText.setBackground(new java.awt.Color(0, 102, 102));

        contentInteracciones.setBackground(new java.awt.Color(102, 204, 255));
        interaccionesText.setViewportView(contentInteracciones);

        interacciones.add(interaccionesText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 620, 500));

        userInteraccion.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 60)); // NOI18N
        userInteraccion.setForeground(new java.awt.Color(255, 255, 255));
        userInteraccion.setText("nombre_usuario");
        interacciones.add(userInteraccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 520, 70));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 60)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("@");
        interacciones.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 60));

        getContentPane().add(interacciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, -1, 579));

        hashtag.setBackground(new java.awt.Color(51, 204, 255));
        hashtag.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hashTextField.setBackground(new java.awt.Color(255, 255, 255));
        hashTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        hashTextField.setForeground(new java.awt.Color(0, 0, 0));
        hashtag.add(hashTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 410, 40));

        buscarHash.setBackground(new java.awt.Color(51, 153, 255));
        buscarHash.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        buscarHash.setForeground(new java.awt.Color(204, 255, 255));
        buscarHash.setText("Buscar HashTags");
        buscarHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarHashActionPerformed(evt);
            }
        });
        hashtag.add(buscarHash, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 120, 60));

        hashText.setBackground(new java.awt.Color(0, 102, 102));

        content.setBackground(new java.awt.Color(102, 204, 255));
        hashText.setViewportView(content);

        hashtag.add(hashText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 600, 480));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 60)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("#");
        hashtag.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 40, 60));

        getContentPane().add(hashtag, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 630, 580));

        pantallaInicio.setBackground(new java.awt.Color(0, 153, 204));
        pantallaInicio.setMaximumSize(new java.awt.Dimension(1200, 680));
        pantallaInicio.setMinimumSize(new java.awt.Dimension(1200, 680));
        pantallaInicio.setPreferredSize(new java.awt.Dimension(1200, 680));
        pantallaInicio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FPinicio.setForeground(new java.awt.Color(255, 255, 255));
        FPinicio.setText("Foto de Perfil");
        pantallaInicio.add(FPinicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 190, 160));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Twitter");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 180, 40));

        pantallaInicio.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 40));

        canttwits.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        canttwits.setForeground(new java.awt.Color(255, 255, 255));
        canttwits.setText("cant twits");
        pantallaInicio.add(canttwits, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 110, 40));

        cantSeguidores.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        cantSeguidores.setForeground(new java.awt.Color(255, 255, 255));
        cantSeguidores.setText("num");
        pantallaInicio.add(cantSeguidores, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 70, 40));

        nombreUser.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        nombreUser.setForeground(new java.awt.Color(255, 255, 255));
        nombreUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreUser.setText("Usuario");
        pantallaInicio.add(nombreUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 210, 220, 40));

        logOut.setBackground(new java.awt.Color(51, 153, 255));
        logOut.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        logOut.setForeground(new java.awt.Color(255, 255, 255));
        logOut.setText("Cerrar Sesion");
        logOut.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 102)));
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        pantallaInicio.add(logOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 620, 190, 50));

        botonHashTag.setBackground(new java.awt.Color(51, 153, 255));
        botonHashTag.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        botonHashTag.setForeground(new java.awt.Color(255, 255, 255));
        botonHashTag.setText("HashTags");
        botonHashTag.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 102)));
        botonHashTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHashTagActionPerformed(evt);
            }
        });
        pantallaInicio.add(botonHashTag, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 190, 50));

        botonTimeLine.setBackground(new java.awt.Color(51, 153, 255));
        botonTimeLine.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        botonTimeLine.setForeground(new java.awt.Color(255, 255, 255));
        botonTimeLine.setText("Time Line");
        botonTimeLine.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 102)));
        botonTimeLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTimeLineActionPerformed(evt);
            }
        });
        pantallaInicio.add(botonTimeLine, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 190, 50));

        botonInteracciones.setBackground(new java.awt.Color(51, 153, 255));
        botonInteracciones.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        botonInteracciones.setForeground(new java.awt.Color(255, 255, 255));
        botonInteracciones.setText("Interacciones");
        botonInteracciones.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 102)));
        botonInteracciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInteraccionesActionPerformed(evt);
            }
        });
        pantallaInicio.add(botonInteracciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, 190, 50));

        editPerfilBoton.setText("Editar Perfil");
        editPerfilBoton.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 102)));
        editPerfilBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPerfilBotonActionPerformed(evt);
            }
        });
        pantallaInicio.add(editPerfilBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 560, 190, 50));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Twits");
        pantallaInicio.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 70, 40));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Seguidos");
        pantallaInicio.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 110, 40));

        cantSeguidos.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        cantSeguidos.setForeground(new java.awt.Color(255, 255, 255));
        cantSeguidos.setText("num");
        pantallaInicio.add(cantSeguidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, 70, 40));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Seguidores");
        pantallaInicio.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 130, 40));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(102, 255, 255)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pantallaInicio.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 350, 640));

        getContentPane().add(pantallaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void twitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twitActionPerformed

    }//GEN-LAST:event_twitActionPerformed

    private void twitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_twitKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_twitKeyPressed

    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
        String mensaje=twit.getText();
        if(mensaje.length()>140){
            JOptionPane.showMessageDialog(null, "Los twits pueden contener como maximo 140 caracteres!");
        }else if(mensaje.length()>0){
            try {
                Usuario_Twitter temporal= new Usuario_Twitter(userTextField1.getText());
                Usuario_Twitter user = new Usuario_Twitter(usuarioLoggeado);
                user.guardarTwit(mensaje);
                twit.setText("");
                cargarTwits();
                canttwits.setText(""+temporal.cantTwits());
                timeline.setVisible(false);
                timeline.setVisible(true);

            } catch (ExcepcionPropia ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (IOException e){
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error: "+e.getMessage());
            }

        }
    }//GEN-LAST:event_botonEnviarActionPerformed

    private void RegistrarseBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarseBotonActionPerformed

        //Try catch para que solo se ingresen numeros en el textField de edad
        try {
            Integer.valueOf(edadTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingresar un numero en la casilla de edad!");
            return;
        }

        //Condicional que valida que todas las casillas esten llenas
        if(nombreUsuarioText.getText().isEmpty() || contadorGenero<=0 || userTextField.getText().isEmpty() || contraTextField.getText().isEmpty() || edadTextField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Favor rellenar toda las casillas!");
        }else{
            try{
                System.out.println("0");

                //Condicional que valida si el usuario existe
                if(!Usuario_Twitter.usuarioExiste(userTextField.getText(), file_Users)){
                    System.out.println("1");
                    //Escribir los datos del registro en el archivo de usuarios
                    file_Users.seek(file_Users.length());
                    file_Users.writeUTF(userTextField.getText());
                    file_Users.writeChar(genero.charAt(0));
                    file_Users.writeUTF(nombreUsuarioText.getText());
                    file_Users.writeUTF(contraTextField.getText());
System.out.println("2");
                    Date fecha = new Date();
                    file_Users.writeLong(fecha.getTime());
System.out.println("3");
                    edad=Integer.parseInt(edadTextField.getText());
                    file_Users.writeInt(edad);
                    file_Users.writeBoolean(true);
System.out.println("4");
                    if(pathSeleccionada.equals("")){
                        pathSeleccionada="src/images/userDefault0.png";
                        file_Users.writeUTF(pathSeleccionada);
                        System.out.println("Entra en icono default");
System.out.println("5");
                        //Carpeta donde se se guardaran los usuarios
                        File ruta_usuario = new File("BDTWITEH/" + userTextField.getText());

                        //Creacion de la carpeta
                        ruta_usuario.mkdir();

                        //Declaracion de los seguidos del usuario
                        File following = new File(ruta_usuario.getPath() + "/followings.twc");
                        //Declaracion de los seguidores del usuario
                        File followers = new File(ruta_usuario.getPath() + "/followers.twc");
                        //Declaracion de los twits del usuario
                        File twits = new File(ruta_usuario.getPath() + "/twits.twc");
System.out.println("6");
                        //Creacion del archivo seguidos
                        following.createNewFile();
                        //Creacion del archivo seguidores
                        followers.createNewFile();
                        //Creacion del archivo twits
                        twits.createNewFile();

                        //Esconde panel de registro y pasa al de login.
                        principalLogin.setVisible(true);
                        registro.setVisible(false);

                        //Funcion que deja los textfields y mas valores en 0 o vacio
                        vaciarCasillas();
System.out.println("7");
                    }else{
                        file_Users.writeUTF(pathSeleccionada);
                        System.out.println("entra a icono personalizado");

                        //Carpeta donde se se guardaran los usuarios
                        File ruta_usuario = new File("BDTWITEH/" + userTextField.getText());
                        //Creacion de la carpeta
                        ruta_usuario.mkdir();

                        //Declaracion de los seguidos del usuario
                        File following = new File(ruta_usuario.getPath() + "/followings.twc");
                        //Declaracion de los seguidores del usuario
                        File followers = new File(ruta_usuario.getPath() + "/followers.twc");
                        //Declaracion de los twits del usuario
                        File twits = new File(ruta_usuario.getPath() + "/twits.twc");

                        //Creacion del archivo seguidos
                        following.createNewFile();
                        //Creacion del archivo seguidores
                        followers.createNewFile();
                        //Creacion del archivo twits
                        twits.createNewFile();

                        //Funcion que deja los textfields y mas valores en 0 o vacio
                        vaciarCasillas();

                        //Esconde panel de registro y pasa al de login.
                        principalLogin.setVisible(true);
                        registro.setVisible(false);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Usuario ingresado ya existe");
                    //Funcion que deja los textfields y mas valores en 0 o vacio
                    vaciarCasillas();

                }
            }catch(IOException e){
                JOptionPane.showMessageDialog(this, "Ha ocurrido un error: "+e.getMessage());
            }

        }
    }//GEN-LAST:event_RegistrarseBotonActionPerformed

    private void nombreUsuarioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreUsuarioTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreUsuarioTextActionPerformed

    private void edadTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edadTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edadTextFieldActionPerformed

    private void seleccionarImagenBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarImagenBotonActionPerformed
        profilePicture.setIcon(seleccionarImagen());
    }//GEN-LAST:event_seleccionarImagenBotonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Image img = new ImageIcon("src/images/userDefault0.png ").getImage();

        ImageIcon miIcono = new ImageIcon(img.getScaledInstance(profilePicture.getWidth(), profilePicture.getHeight(), Image.SCALE_SMOOTH));

        profilePicture.setIcon(miIcono);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void botonIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIngresarActionPerformed
        try{
            RandomAccessFile fu = new RandomAccessFile("BDTWITEH/usuarios.twc", "rw");
            System.out.println("entro 1");
            if(Usuario_Twitter.usuarioExiste(userTextField1.getText(), fu)){
                System.out.println("entro 1.3");
                fu.readChar();
                System.out.println("entro 1.4");
                fu.readUTF();
                 System.out.println("entro 2");
                if(fu.readUTF().equals(contraTextField1.getText())){
                    Usuario_Twitter temporal= new Usuario_Twitter(userTextField1.getText());
                    usuarioLoggeado=userTextField1.getText();
                    System.out.println("entra3");
                    if(temporal.isActivo()){
                        System.out.println("pasa boolean");
                        Image img = new ImageIcon(temporal.getImg_path()).getImage();
                        ImageIcon miIcono = new ImageIcon(img.getScaledInstance(FPinicio.getWidth(), FPinicio.getHeight(), Image.SCALE_SMOOTH));
                         System.out.println("entro 4");
                        pantallaInicio.setVisible(true);
                        jPanel1.setVisible(true);
                        timeline.setVisible(true);
                        showTwits.setVisible(true);
                        FPinicio.setIcon(miIcono);
                        nombreUser.setText(usuarioLoggeado);
                         System.out.println("entro 5");
                        cantSeguidores.setText(""+temporal.getFollowers());
                        cantSeguidos.setText(""+temporal.getFollowings());
                        cargarTwits();
                        canttwits.setText(""+temporal.cantTwits());
                        principalLogin.setVisible(false);
                         System.out.println("entro 7");
                    }else{
                         System.out.println("entro 1.1");
                        JOptionPane.showMessageDialog(null, "Su cuenta ha sido reactivada.");
                        temporal.actUsuario();
                        Image img = new ImageIcon(temporal.getImg_path()).getImage();
                        ImageIcon miIcono = new ImageIcon(img.getScaledInstance(FPinicio.getWidth(), FPinicio.getHeight(), Image.SCALE_SMOOTH));
                        FPinicio.setIcon(miIcono);
                        nombreUser.setText(usuarioLoggeado);
                        pantallaInicio.setVisible(true);
                        jPanel1.setVisible(true);
                        timeline.setVisible(true);
                        showTwits.setVisible(true);
                        cargarTwits();
                        canttwits.setText(""+temporal.cantTwits());
                        principalLogin.setVisible(false);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Contraseña incorrecta!");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Usuario incorrecto o inexistente!");
            }
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error ARCHIVO NO ENCONTRADO ");
        } catch (ExcepcionPropia e) {
            JOptionPane.showMessageDialog(null, "Error: 404");
        }
    }//GEN-LAST:event_botonIngresarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ImageIcon miIcono = new ImageIcon(image.getScaledInstance(profilePicture.getWidth(), profilePicture.getHeight(), Image.SCALE_SMOOTH));
        System.out.println(miIcono);
        profilePicture.setIcon(miIcono);
        registro.setVisible(true);
        principalLogin.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void volverBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBotonActionPerformed
        perfilUser.setVisible(false);
        buscarTextField.setText("");
    }//GEN-LAST:event_volverBotonActionPerformed

    private void unfollowBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfollowBotonActionPerformed
        try {
            Usuario_Twitter temporal = new Usuario_Twitter(usuarioLoggeado);
            temporal.dejarDeSeguir(userVerPerfil.getText());
        } catch (IOException | ExcepcionPropia ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: "+ex.getMessage());
        }
    }//GEN-LAST:event_unfollowBotonActionPerformed

    private void followBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followBotonActionPerformed
        try {
            Usuario_Twitter temporal = new Usuario_Twitter(usuarioLoggeado);
            temporal.seguirAndAddFollow(userVerPerfil.getText());
        } catch (IOException | ExcepcionPropia ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: "+ex.getMessage());
        }
    }//GEN-LAST:event_followBotonActionPerformed

    private void verTwitsEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verTwitsEditarActionPerformed
        try {
            cargarTwitsEditPerfil();
            perfilUser.setVisible(false);
            perfilUser.setVisible(true);
        } catch (IOException | ExcepcionPropia ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: "+ex.getMessage());
        }
    }//GEN-LAST:event_verTwitsEditarActionPerformed

    private void buscarTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarTextFieldKeyReleased

    }//GEN-LAST:event_buscarTextFieldKeyReleased

    private void desactivarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desactivarBotonActionPerformed
        try {
            Usuario_Twitter temporal = new Usuario_Twitter(usuarioLoggeado);
            temporal.descUsuario();
            twit.setText("");
            hashTextField.setText("");
            buscarTextField.setText("");
            userTextField1.setText("");
            contraTextField1.setText("");
            pantallaInicio.setVisible(false);
            timeline.setVisible(false);
            hashtag.setVisible(false);
            interacciones.setVisible(false);
            editPerfil.setVisible(false);
            principalLogin.setVisible(true);
            JOptionPane.showMessageDialog(null, "Cuenta desactivada correctamente! ");
        } catch (IOException | ExcepcionPropia ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: "+ex);
        }
    }//GEN-LAST:event_desactivarBotonActionPerformed

    private void searchBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBotonActionPerformed
        try {
            buscarUsers();
            editPerfil.setVisible(false);
            editPerfil.setVisible(true);
        } catch (IOException | ExcepcionPropia ex) {
            Logger.getLogger(twitter.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchBotonActionPerformed

    private void volverEditPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverEditPerfilActionPerformed
        editPerfil.setVisible(false);
        buscarTextField.setText("");
    }//GEN-LAST:event_volverEditPerfilActionPerformed

    private void buscarHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarHashActionPerformed
        twit.setText("");
        buscarTextField.setText("");
        userTextField1.setText("");
        contraTextField1.setText("");
        try {
            String texto = hashTextField.getText();

            //elimina el primer # para que no me genere un hash vacio
            if (texto.length() > 0){

                String[] hashs = texto.split(" ");

                //posbles hash para buscar
                ArrayList<String> pos_hash = new ArrayList<>();

                for (String hash : hashs) {
                    if (hash.length() > 0) {
                        pos_hash.add("#" + hash);
                    }
                }

                String[] temporal = new String[pos_hash.size()];
                for (int i = 0; i < temporal.length; i++) {
                    temporal[i] = pos_hash.get(i);
                }

                cargarHashTags(temporal);
            }

        } catch (ExcepcionPropia | IOException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: "+ex.getMessage());

        }
    }//GEN-LAST:event_buscarHashActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    if(jComboBox1.getSelectedItem().toString().equals("masculino")){
        genero="masculino";
        contadorGenero++;
    }else{
        genero="femenino";
        contadorGenero++;
    }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void userTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userTextField1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_userTextField1FocusGained

    private void userTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userTextField1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_userTextField1FocusLost

    private void baaackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baaackActionPerformed
        logOutActionPerformed(evt);
    }//GEN-LAST:event_baaackActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        pantallaInicio.setVisible(false);
        jPanel1.setVisible(false);
        timeline.setVisible(false);
        showTwits.setVisible(false);
        hashtag.setVisible(false);
        editPerfil.setVisible(false);
        perfilUser.setVisible(false);
        interacciones.setVisible(false);
        twit.setText("");
        hashTextField.setText("");
        buscarTextField.setText("");
        userTextField1.setText("");
        contraTextField1.setText("");
        principalLogin.setVisible(true);
    }//GEN-LAST:event_logOutActionPerformed

    private void editPerfilBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPerfilBotonActionPerformed
        editPerfil.setVisible(true);
        timeline.setVisible(false);
        hashtag.setVisible(false);
        interacciones.setVisible(false);
    }//GEN-LAST:event_editPerfilBotonActionPerformed

    private void botonInteraccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInteraccionesActionPerformed
        hashtag.setVisible(false);
        timeline.setVisible(false);
        editPerfil.setVisible(false);
        userInteraccion.setText(usuarioLoggeado);
        cargarInteracciones();
        interacciones.setVisible(true);
    }//GEN-LAST:event_botonInteraccionesActionPerformed

    private void botonHashTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHashTagActionPerformed
        hashtag.setVisible(true);
        timeline.setVisible(false);
        interacciones.setVisible(false);
        editPerfil.setVisible(false);
    }//GEN-LAST:event_botonHashTagActionPerformed

    private void botonTimeLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTimeLineActionPerformed
        timeline.setVisible(true);
        hashtag.setVisible(false);
        interacciones.setVisible(false);
        editPerfil.setVisible(false);
    }//GEN-LAST:event_botonTimeLineActionPerformed
public void vaciarCasillas(){
        //Agarra la imagen default
        Image img = new ImageIcon("src/images/userDefault0.png ").getImage();
        ImageIcon miIcono = new ImageIcon(img.getScaledInstance(profilePicture.getWidth(), profilePicture.getHeight(), Image.SCALE_SMOOTH));
        profilePicture.setIcon(miIcono);
        edadTextField.setText("");
        nombreUsuarioText.setText("");
        userTextField.setText("");
        contraTextField.setText("");
        //Variable que guarda el genero
        genero="";
        //Variable para validar que se han tocado los botones y el genero haya sido seleccionado
        contadorGenero=0;
    }

    //Funcion para extraer la imagen seleccionada del File Chooser
    public ImageIcon seleccionarImagen(){
        String path ;
          
            //Crea fileChooser
            JFileChooser fileChooser = new JFileChooser();
            //Filtro para que unicamente pueda elegir las imagenes con formato jpg y png
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("png & jpg","png","jpg");
            
            //Pone por default donde aparecera el FileChooser. (Yo lo puse en imagenes porque si te metes a "redes" que tiene tu compu entonces se congela el programa)
            fileChooser.setCurrentDirectory(new File("Z/"+Menu.MenuPrincipal.nombreIngresado));
            //Pone el filtro
            fileChooser.setFileFilter(filtro);
            
            //Variable que guarda un entero para saber si se selecciono aceptar o cancelar en el file Chooser
            int respuesta = fileChooser.showOpenDialog(this);
            
            //Condicional que valida que se haya elegido la opcion de aceptar en el file Chosser
            if(respuesta == JFileChooser.APPROVE_OPTION){
                
                //Guarda la ruta de el archivo seleccionado
                path = fileChooser.getSelectedFile().getPath();
                //Variable "global" que guarda la direccion que ha sido seleccionada del file chooser
                pathSeleccionada=fileChooser.getSelectedFile().getPath();
                
                /*
                Se le asigna "nada" para dar a entender que se selecciono una imagen del fileChooser, debido a que el archivo imagenPerfil es igualada
                a nula en el constructor, y mas adelante en el codigo se ahce la validacion que si es igual a nula(osea que no selecciono ninguna imagen)
                entonces se guarde la imagen default en el archivo.
                
                Perdon el mucho texto xD
                
                */               
                System.out.println(pathSeleccionada);
                Image imagen = new ImageIcon(path).getImage();
                
                ImageIcon miIcono = new ImageIcon(imagen.getScaledInstance(profilePicture.getWidth(), profilePicture.getHeight(), Image.SCALE_SMOOTH));
                
                return miIcono;
                
            }
            ImageIcon miIcono = new ImageIcon(image.getScaledInstance(profilePicture.getWidth(), profilePicture.getHeight(), Image.SCALE_SMOOTH));
            return miIcono;
    }
    private void cargarHashTags(String[] tag) throws IOException, ExcepcionPropia{
        content.removeAll();
        
        ArrayList<String[]> twits;
        Usuario_Twitter user = new Usuario_Twitter(usuarioLoggeado);
        twits = user.buscarHashTag(tag);
        
        if (!twits.isEmpty()) {

            menzaje[] twitz = new menzaje[twits.size()];

            for (int i = 0; i < twitz.length; i++) {

                //Agarra el arreglo de twits
                String[] menzaje = twits.get(i);
                
                //Instancia la clase con las funciones de usuarios de twitter
                Usuario_Twitter temporal = new Usuario_Twitter(menzaje[0]);

                //formato de fecha
                Date fecha = new Date();
                fecha.setTime(Long.parseLong(menzaje[2]));
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                // Aplicar el formato a la fecha
                String fechaFormateada = formato.format(fecha);
               
                //Obtener imagen escalada
                Image imagen = new ImageIcon(temporal.getImg_path()).getImage();
                ImageIcon icono = new ImageIcon(imagen.getScaledInstance(90, 90, Image.SCALE_SMOOTH));
                //Genera el twit
                twitz[i]=new menzaje(icono,menzaje[1],temporal.getUser(),fechaFormateada);
                
                content.setPreferredSize(new Dimension(100, (i + 1) * 125));
                content.add(twitz[i]);
                hashtag.setVisible(false);
                hashtag.setVisible(true);
            }

        } else {
           Image img = new ImageIcon("src/images/error404.png").getImage();
           ImageIcon miIcono = new ImageIcon(img.getScaledInstance(90, 90, Image.SCALE_SMOOTH));
            menzaje a = new menzaje(miIcono, "No se ha podido encontrar ese hashtag", "", "");
            content.add(a);
            hashtag.setVisible(false);
            hashtag.setVisible(true);
        }
    }
    private void buscarUsers() throws IOException,ExcepcionPropia{
        String searchTerm = buscarTextField.getText();
        ArrayList<String> filteredUsers = new ArrayList<>();
        file_Users.seek(0);
        while(file_Users.getFilePointer()<file_Users.length()){    
        Usuario_Twitter temporal = new Usuario_Twitter(file_Users.readUTF());
        String user = temporal.getUser();
        if(user.equals(usuarioLoggeado)){
            file_Users.readChar();
            file_Users.readUTF();
            file_Users.readUTF();
            file_Users.readLong();
            file_Users.readInt();
            file_Users.readBoolean();
            file_Users.readUTF();    
        }else{
        if(!temporal.isActivo()){
            file_Users.readChar();
            file_Users.readUTF();
            file_Users.readUTF();
            file_Users.readLong();
            file_Users.readInt();
            file_Users.readBoolean();
            file_Users.readUTF();    
        }else{
            if(user.contains(searchTerm)){
                filteredUsers.add(user);
            }
            file_Users.readChar();
            file_Users.readUTF();
            file_Users.readUTF();
            file_Users.readLong();
            file_Users.readInt();
            file_Users.readBoolean();
            file_Users.readUTF();    
        }
        }
        displayUsers(filteredUsers);
        }
    }
    
    private void displayUsers(ArrayList<String> users) throws IOException, ExcepcionPropia {
        Usuario_Twitter logged = new Usuario_Twitter(usuarioLoggeado);
        contenidoPanel.removeAll();
        
        for (String user : users) {
            JButton userButton = new JButton(user);
            userButton.addActionListener((ActionEvent e) -> {
                perfilUser.setVisible(true);
                contenidoPanel.removeAll();
                buscarTextField.setText("");
                try {
                    Usuario_Twitter temporal = new Usuario_Twitter(user);
                    Image image1 = new ImageIcon(temporal.getImg_path()).getImage();
                    ImageIcon miIcono = new ImageIcon(image1.getScaledInstance(fotoVerPerfil.getWidth(), fotoVerPerfil.getHeight(), Image.SCALE_SMOOTH));
                    fotoVerPerfil.setIcon(miIcono);
                    userVerPerfil.setText(temporal.getUser());
                    editPerfil.setVisible(false);
                    labelSeguidores.setText(""+temporal.getFollowers());
                    labelSeguidos.setText(""+temporal.getFollowings());
                    nombreVerPerfil1.setText(temporal.getNombre());
                    if(logged.loSigo(temporal.getUser())){
                        seguidoONo.setText("Lo Sigo!");
                    }else{
                        seguidoONo.setText("No lo Sigo!");
                    }
                }catch (IOException | ExcepcionPropia ex) {
                    JOptionPane.showMessageDialog(null, "Ha ocurrido un error: "+ex.getMessage());
                }
            });
            contenidoPanel.add(userButton);
        }
    }
    private void cargarTwits()throws IOException, ExcepcionPropia{
       contenido.removeAll();
       Usuario_Twitter user = new Usuario_Twitter(usuarioLoggeado);
       ArrayList<String[]> twits;
       twits = user.cargarTwits();
       
       menzaje[] twitz = new menzaje[twits.size()];
       if(!twits.isEmpty()){
           

            for (int i = 0; i < twitz.length; i++) {
                    
                //Agarra el arreglo de twits
                String[] menzaje = twits.get(i);
                
                //Instancia la clase con las funciones de usuarios de twitter
                Usuario_Twitter temporal = new Usuario_Twitter(menzaje[0]);

                //formato de fecha
                Date fecha = new Date();
                fecha.setTime(Long.parseLong(menzaje[2]));
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                // Aplicar el formato a la fecha
                String fechaFormateada = formato.format(fecha);
               
                //Obtener imagen escalada
                Image imagen = new ImageIcon(temporal.getImg_path()).getImage();
                ImageIcon icono = new ImageIcon(imagen.getScaledInstance(90, 90, Image.SCALE_SMOOTH));
                //Genera el twit
                twitz[i]=new menzaje(icono,menzaje[1],temporal.getUser(),fechaFormateada);
                
                contenido.setPreferredSize(new Dimension(100, (i + 1) * 125));
                contenido.add(twitz[i]);
            }
       }
    }
    
    private void cargarTwitsEditPerfil()throws IOException, ExcepcionPropia{
       contenidoVerPerfil.removeAll();
       Usuario_Twitter user = new Usuario_Twitter(userVerPerfil.getText());
       ArrayList<String[]> twits;
       twits = user.misTwits();
       
       menzaje[] twitz = new menzaje[twits.size()];
       if(!twits.isEmpty()){
           

            for (int i = 0; i < twitz.length; i++) {
                    
                //Agarra el arreglo de twits
                String[] menzaje = twits.get(i);
                
                //Instancia la clase con las funciones de usuarios de twitter
                Usuario_Twitter temporal = new Usuario_Twitter(menzaje[0]);

                //formato de fecha
                Date fecha = new Date();
                fecha.setTime(Long.parseLong(menzaje[2]));
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                // Aplicar el formato a la fecha
                String fechaFormateada = formato.format(fecha);
               
                //Obtener imagen escalada
                Image imagen = new ImageIcon(temporal.getImg_path()).getImage();
                ImageIcon icono = new ImageIcon(imagen.getScaledInstance(90, 90, Image.SCALE_SMOOTH));
                //Genera el twit
                twitz[i]=new menzaje(icono,menzaje[1],temporal.getUser(),fechaFormateada);
                
                contenidoVerPerfil.setPreferredSize(new Dimension(100, (i + 1) * 125));
                contenidoVerPerfil.add(twitz[i]);
            }
       }
    }
    public void cargarInteracciones(){
        contentInteracciones.removeAll();

        try{
            Usuario_Twitter user = new Usuario_Twitter(usuarioLoggeado);
        ArrayList<String[]> twits;
        twits = user.cargarInteracciones();
        
        if (!twits.isEmpty()) {

            menzaje[] twitz = new menzaje[twits.size()];

            for (int i = 0; i < twitz.length; i++) {

                String[] mensaje = twits.get(i);

                Usuario_Twitter temporal = new Usuario_Twitter(mensaje[0]);

                //formato de fecha
                Date fecha = new Date();
                fecha.setTime(Long.parseLong(mensaje[2]));
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                // Aplicar el formato a la fecha
                String fechaFormateada = formato.format(fecha);

               //Obtener imagen escalada
                Image imagen = new ImageIcon(temporal.getImg_path()).getImage();
                ImageIcon icono = new ImageIcon(imagen.getScaledInstance(90, 90, Image.SCALE_SMOOTH));

                twitz[i] = new menzaje(icono, mensaje[1],temporal.getUser(), fechaFormateada);

                contentInteracciones.setPreferredSize(new Dimension(100, (i + 1) * 125));
                contentInteracciones.add(twitz[i]);
            }

        } else {
            Image img = new ImageIcon("src/images/error404.png").getImage();
            ImageIcon miIcono = new ImageIcon(img.getScaledInstance(90, 90, Image.SCALE_SMOOTH));
            menzaje a = new menzaje(miIcono, "No se ha podido encontrar una interaccion!", "", "");
            contentInteracciones.add(a);
            interacciones.setVisible(false);
            interacciones.setVisible(true);
        }
        }catch(IOException | ExcepcionPropia e){
            JOptionPane.showMessageDialog(null, "Error: "+e.getMessage());
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FPinicio;
    private javax.swing.JButton RegistrarseBoton;
    private javax.swing.JLabel Titulo_CrearUsuarioLabel;
    private javax.swing.JLabel Titulo_InicioSesionLabel;
    private javax.swing.JButton baaack;
    private javax.swing.JButton botonEnviar;
    private javax.swing.JButton botonHashTag;
    private javax.swing.JButton botonIngresar;
    private javax.swing.JButton botonInteracciones;
    private javax.swing.JButton botonTimeLine;
    private javax.swing.JButton buscarHash;
    private javax.swing.JTextField buscarTextField;
    private javax.swing.JLabel cantSeguidores;
    private javax.swing.JLabel cantSeguidos;
    private javax.swing.JLabel canttwits;
    private javax.swing.JPanel contenido;
    private javax.swing.JPanel contenidoPanel;
    private javax.swing.JPanel contenidoVerPerfil;
    private javax.swing.JPanel content;
    private javax.swing.JPanel contentInteracciones;
    private javax.swing.JLabel contraLabel1;
    private javax.swing.JLabel contraSesionLabel2;
    private javax.swing.JTextField contraTextField;
    private javax.swing.JTextField contraTextField1;
    private javax.swing.JButton desactivarBoton;
    private javax.swing.JTextField edadTextField;
    private javax.swing.JPanel editPerfil;
    private javax.swing.JButton editPerfilBoton;
    private javax.swing.JButton followBoton;
    private javax.swing.JLabel fotoPerfilLabel;
    private javax.swing.JLabel fotoVerPerfil;
    private javax.swing.JScrollPane hashText;
    private javax.swing.JTextField hashTextField;
    private javax.swing.JPanel hashtag;
    private javax.swing.JLabel imagenTwitter;
    private javax.swing.JPanel interacciones;
    private javax.swing.JScrollPane interaccionesText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelSeguidores;
    private javax.swing.JLabel labelSeguidos;
    private javax.swing.JButton logOut;
    private javax.swing.JLabel nombreUser;
    private javax.swing.JTextField nombreUsuarioText;
    private javax.swing.JLabel nombreVerPerfil1;
    private javax.swing.JPanel pantallaInicio;
    private javax.swing.JPanel perfilUser;
    private javax.swing.JPanel principalLogin;
    private javax.swing.JLabel profilePicture;
    private javax.swing.JPanel registro;
    private javax.swing.JButton searchBoton;
    private javax.swing.JLabel seguidoONo;
    private javax.swing.JButton seleccionarImagenBoton;
    private javax.swing.JScrollPane showTwits;
    private javax.swing.JLabel textoParaRegistrarLabel;
    private javax.swing.JPanel timeline;
    private javax.swing.JTextField twit;
    private javax.swing.JScrollPane twitsVerPerfil;
    private javax.swing.JButton unfollowBoton;
    private javax.swing.JLabel userInteraccion;
    private javax.swing.JLabel userLabel;
    private javax.swing.JLabel userLabel1;
    private javax.swing.JLabel userLabel2;
    private javax.swing.JLabel userLabel3;
    private javax.swing.JLabel userSesionLabel1;
    private javax.swing.JTextField userTextField;
    private javax.swing.JTextField userTextField1;
    private javax.swing.JLabel userVerPerfil;
    private javax.swing.JLabel userVerPerfil3;
    private javax.swing.JLabel userVerPerfil4;
    private javax.swing.JButton verTwitsEditar;
    private javax.swing.JButton volverBoton;
    private javax.swing.JButton volverEditPerfil;
    // End of variables declaration//GEN-END:variables
}
